"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/url-join";
exports.ids = ["vendor-chunks/url-join"];
exports.modules = {

/***/ "(ssr)/./node_modules/url-join/lib/url-join.js":
/*!***********************************************!*\
  !*** ./node_modules/url-join/lib/url-join.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n(function(name, context, definition) {\n    if ( true && module.exports) module.exports = definition();\n    else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    else {}\n})(\"urljoin\", void 0, function() {\n    function normalize(strArray) {\n        var resultArray = [];\n        if (strArray.length === 0) {\n            return \"\";\n        }\n        if (typeof strArray[0] !== \"string\") {\n            throw new TypeError(\"Url must be a string. Received \" + strArray[0]);\n        }\n        // If the first part is a plain protocol, we combine it with the next part.\n        if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n            var first = strArray.shift();\n            strArray[0] = first + strArray[0];\n        }\n        // There must be two or three slashes in the file protocol, two slashes in anything else.\n        if (strArray[0].match(/^file:\\/\\/\\//)) {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1:///\");\n        } else {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1://\");\n        }\n        for(var i = 0; i < strArray.length; i++){\n            var component = strArray[i];\n            if (typeof component !== \"string\") {\n                throw new TypeError(\"Url must be a string. Received \" + component);\n            }\n            if (component === \"\") {\n                continue;\n            }\n            if (i > 0) {\n                // Removing the starting slashes for each component but the first.\n                component = component.replace(/^[\\/]+/, \"\");\n            }\n            if (i < strArray.length - 1) {\n                // Removing the ending slashes for each component but the last.\n                component = component.replace(/[\\/]+$/, \"\");\n            } else {\n                // For the last component we will combine multiple slashes to a single one.\n                component = component.replace(/[\\/]+$/, \"/\");\n            }\n            resultArray.push(component);\n        }\n        var str = resultArray.join(\"/\");\n        // Each input component is now separated by a single slash except the possible first plain protocol part.\n        // remove trailing slash before parameters or hash\n        str = str.replace(/\\/(\\?|&|#[^!])/g, \"$1\");\n        // replace ? in parameters with &\n        var parts = str.split(\"?\");\n        str = parts.shift() + (parts.length > 0 ? \"?\" : \"\") + parts.join(\"&\");\n        return str;\n    }\n    return function() {\n        var input;\n        if (typeof arguments[0] === \"object\") {\n            input = arguments[0];\n        } else {\n            input = [].slice.call(arguments);\n        }\n        return normalize(input);\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdXJsLWpvaW4vbGliL3VybC1qb2luLmpzIiwibWFwcGluZ3MiOiI7QUFBQyxVQUFVQSxJQUFJLEVBQUVDLE9BQU8sRUFBRUMsVUFBVTtJQUNsQyxJQUFJLEtBQWtCLElBQWVDLE9BQU9DLE9BQU8sRUFBRUQsT0FBT0MsT0FBTyxHQUFHRjtTQUNqRSxJQUFJLElBQTBDLEVBQUVHLG9DQUFPSCxVQUFVQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtHQUFDQTtTQUNsRUQsRUFBNkJDO0FBQ3BDLEdBQUcsV0FBVyxRQUFNO0lBRWxCLFNBQVNLLFVBQVdDLFFBQVE7UUFDMUIsSUFBSUMsY0FBYyxFQUFFO1FBQ3BCLElBQUlELFNBQVNFLE1BQU0sS0FBSyxHQUFHO1lBQUUsT0FBTztRQUFJO1FBRXhDLElBQUksT0FBT0YsUUFBUSxDQUFDLEVBQUUsS0FBSyxVQUFVO1lBQ25DLE1BQU0sSUFBSUcsVUFBVSxvQ0FBb0NILFFBQVEsQ0FBQyxFQUFFO1FBQ3JFO1FBRUEsMkVBQTJFO1FBQzNFLElBQUlBLFFBQVEsQ0FBQyxFQUFFLENBQUNJLEtBQUssQ0FBQyxtQkFBbUJKLFNBQVNFLE1BQU0sR0FBRyxHQUFHO1lBQzVELElBQUlHLFFBQVFMLFNBQVNNLEtBQUs7WUFDMUJOLFFBQVEsQ0FBQyxFQUFFLEdBQUdLLFFBQVFMLFFBQVEsQ0FBQyxFQUFFO1FBQ25DO1FBRUEseUZBQXlGO1FBQ3pGLElBQUlBLFFBQVEsQ0FBQyxFQUFFLENBQUNJLEtBQUssQ0FBQyxpQkFBaUI7WUFDckNKLFFBQVEsQ0FBQyxFQUFFLEdBQUdBLFFBQVEsQ0FBQyxFQUFFLENBQUNPLE9BQU8sQ0FBQyxpQkFBaUI7UUFDckQsT0FBTztZQUNMUCxRQUFRLENBQUMsRUFBRSxHQUFHQSxRQUFRLENBQUMsRUFBRSxDQUFDTyxPQUFPLENBQUMsaUJBQWlCO1FBQ3JEO1FBRUEsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlSLFNBQVNFLE1BQU0sRUFBRU0sSUFBSztZQUN4QyxJQUFJQyxZQUFZVCxRQUFRLENBQUNRLEVBQUU7WUFFM0IsSUFBSSxPQUFPQyxjQUFjLFVBQVU7Z0JBQ2pDLE1BQU0sSUFBSU4sVUFBVSxvQ0FBb0NNO1lBQzFEO1lBRUEsSUFBSUEsY0FBYyxJQUFJO2dCQUFFO1lBQVU7WUFFbEMsSUFBSUQsSUFBSSxHQUFHO2dCQUNULGtFQUFrRTtnQkFDbEVDLFlBQVlBLFVBQVVGLE9BQU8sQ0FBQyxVQUFVO1lBQzFDO1lBQ0EsSUFBSUMsSUFBSVIsU0FBU0UsTUFBTSxHQUFHLEdBQUc7Z0JBQzNCLCtEQUErRDtnQkFDL0RPLFlBQVlBLFVBQVVGLE9BQU8sQ0FBQyxVQUFVO1lBQzFDLE9BQU87Z0JBQ0wsMkVBQTJFO2dCQUMzRUUsWUFBWUEsVUFBVUYsT0FBTyxDQUFDLFVBQVU7WUFDMUM7WUFFQU4sWUFBWVMsSUFBSSxDQUFDRDtRQUVuQjtRQUVBLElBQUlFLE1BQU1WLFlBQVlXLElBQUksQ0FBQztRQUMzQix5R0FBeUc7UUFFekcsa0RBQWtEO1FBQ2xERCxNQUFNQSxJQUFJSixPQUFPLENBQUMsbUJBQW1CO1FBRXJDLGlDQUFpQztRQUNqQyxJQUFJTSxRQUFRRixJQUFJRyxLQUFLLENBQUM7UUFDdEJILE1BQU1FLE1BQU1QLEtBQUssS0FBTU8sQ0FBQUEsTUFBTVgsTUFBTSxHQUFHLElBQUksTUFBSyxFQUFDLElBQUtXLE1BQU1ELElBQUksQ0FBQztRQUVoRSxPQUFPRDtJQUNUO0lBRUEsT0FBTztRQUNMLElBQUlJO1FBRUosSUFBSSxPQUFPQyxTQUFTLENBQUMsRUFBRSxLQUFLLFVBQVU7WUFDcENELFFBQVFDLFNBQVMsQ0FBQyxFQUFFO1FBQ3RCLE9BQU87WUFDTEQsUUFBUSxFQUFFLENBQUNFLEtBQUssQ0FBQ0MsSUFBSSxDQUFDRjtRQUN4QjtRQUVBLE9BQU9qQixVQUFVZ0I7SUFDbkI7QUFFRiIsInNvdXJjZXMiOlsid2VicGFjazovL3N0YXJrbmV0LXRlbXBsYXRlLXN0YXJ0ZXIvLi9ub2RlX21vZHVsZXMvdXJsLWpvaW4vbGliL3VybC1qb2luLmpzPzg5MTkiXSwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uIChuYW1lLCBjb250ZXh0LCBkZWZpbml0aW9uKSB7XG4gIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykgbW9kdWxlLmV4cG9ydHMgPSBkZWZpbml0aW9uKCk7XG4gIGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkgZGVmaW5lKGRlZmluaXRpb24pO1xuICBlbHNlIGNvbnRleHRbbmFtZV0gPSBkZWZpbml0aW9uKCk7XG59KSgndXJsam9pbicsIHRoaXMsIGZ1bmN0aW9uICgpIHtcblxuICBmdW5jdGlvbiBub3JtYWxpemUgKHN0ckFycmF5KSB7XG4gICAgdmFyIHJlc3VsdEFycmF5ID0gW107XG4gICAgaWYgKHN0ckFycmF5Lmxlbmd0aCA9PT0gMCkgeyByZXR1cm4gJyc7IH1cblxuICAgIGlmICh0eXBlb2Ygc3RyQXJyYXlbMF0gIT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVcmwgbXVzdCBiZSBhIHN0cmluZy4gUmVjZWl2ZWQgJyArIHN0ckFycmF5WzBdKTtcbiAgICB9XG5cbiAgICAvLyBJZiB0aGUgZmlyc3QgcGFydCBpcyBhIHBsYWluIHByb3RvY29sLCB3ZSBjb21iaW5lIGl0IHdpdGggdGhlIG5leHQgcGFydC5cbiAgICBpZiAoc3RyQXJyYXlbMF0ubWF0Y2goL15bXi86XSs6XFwvKiQvKSAmJiBzdHJBcnJheS5sZW5ndGggPiAxKSB7XG4gICAgICB2YXIgZmlyc3QgPSBzdHJBcnJheS5zaGlmdCgpO1xuICAgICAgc3RyQXJyYXlbMF0gPSBmaXJzdCArIHN0ckFycmF5WzBdO1xuICAgIH1cblxuICAgIC8vIFRoZXJlIG11c3QgYmUgdHdvIG9yIHRocmVlIHNsYXNoZXMgaW4gdGhlIGZpbGUgcHJvdG9jb2wsIHR3byBzbGFzaGVzIGluIGFueXRoaW5nIGVsc2UuXG4gICAgaWYgKHN0ckFycmF5WzBdLm1hdGNoKC9eZmlsZTpcXC9cXC9cXC8vKSkge1xuICAgICAgc3RyQXJyYXlbMF0gPSBzdHJBcnJheVswXS5yZXBsYWNlKC9eKFteLzpdKyk6XFwvKi8sICckMTovLy8nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3RyQXJyYXlbMF0gPSBzdHJBcnJheVswXS5yZXBsYWNlKC9eKFteLzpdKyk6XFwvKi8sICckMTovLycpO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBjb21wb25lbnQgPSBzdHJBcnJheVtpXTtcblxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1VybCBtdXN0IGJlIGEgc3RyaW5nLiBSZWNlaXZlZCAnICsgY29tcG9uZW50KTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNvbXBvbmVudCA9PT0gJycpIHsgY29udGludWU7IH1cblxuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIC8vIFJlbW92aW5nIHRoZSBzdGFydGluZyBzbGFzaGVzIGZvciBlYWNoIGNvbXBvbmVudCBidXQgdGhlIGZpcnN0LlxuICAgICAgICBjb21wb25lbnQgPSBjb21wb25lbnQucmVwbGFjZSgvXltcXC9dKy8sICcnKTtcbiAgICAgIH1cbiAgICAgIGlmIChpIDwgc3RyQXJyYXkubGVuZ3RoIC0gMSkge1xuICAgICAgICAvLyBSZW1vdmluZyB0aGUgZW5kaW5nIHNsYXNoZXMgZm9yIGVhY2ggY29tcG9uZW50IGJ1dCB0aGUgbGFzdC5cbiAgICAgICAgY29tcG9uZW50ID0gY29tcG9uZW50LnJlcGxhY2UoL1tcXC9dKyQvLCAnJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBGb3IgdGhlIGxhc3QgY29tcG9uZW50IHdlIHdpbGwgY29tYmluZSBtdWx0aXBsZSBzbGFzaGVzIHRvIGEgc2luZ2xlIG9uZS5cbiAgICAgICAgY29tcG9uZW50ID0gY29tcG9uZW50LnJlcGxhY2UoL1tcXC9dKyQvLCAnLycpO1xuICAgICAgfVxuXG4gICAgICByZXN1bHRBcnJheS5wdXNoKGNvbXBvbmVudCk7XG5cbiAgICB9XG5cbiAgICB2YXIgc3RyID0gcmVzdWx0QXJyYXkuam9pbignLycpO1xuICAgIC8vIEVhY2ggaW5wdXQgY29tcG9uZW50IGlzIG5vdyBzZXBhcmF0ZWQgYnkgYSBzaW5nbGUgc2xhc2ggZXhjZXB0IHRoZSBwb3NzaWJsZSBmaXJzdCBwbGFpbiBwcm90b2NvbCBwYXJ0LlxuXG4gICAgLy8gcmVtb3ZlIHRyYWlsaW5nIHNsYXNoIGJlZm9yZSBwYXJhbWV0ZXJzIG9yIGhhc2hcbiAgICBzdHIgPSBzdHIucmVwbGFjZSgvXFwvKFxcP3wmfCNbXiFdKS9nLCAnJDEnKTtcblxuICAgIC8vIHJlcGxhY2UgPyBpbiBwYXJhbWV0ZXJzIHdpdGggJlxuICAgIHZhciBwYXJ0cyA9IHN0ci5zcGxpdCgnPycpO1xuICAgIHN0ciA9IHBhcnRzLnNoaWZ0KCkgKyAocGFydHMubGVuZ3RoID4gMCA/ICc/JzogJycpICsgcGFydHMuam9pbignJicpO1xuXG4gICAgcmV0dXJuIHN0cjtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGlucHV0O1xuXG4gICAgaWYgKHR5cGVvZiBhcmd1bWVudHNbMF0gPT09ICdvYmplY3QnKSB7XG4gICAgICBpbnB1dCA9IGFyZ3VtZW50c1swXTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5wdXQgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vcm1hbGl6ZShpbnB1dCk7XG4gIH07XG5cbn0pO1xuIl0sIm5hbWVzIjpbIm5hbWUiLCJjb250ZXh0IiwiZGVmaW5pdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZpbmUiLCJhbWQiLCJub3JtYWxpemUiLCJzdHJBcnJheSIsInJlc3VsdEFycmF5IiwibGVuZ3RoIiwiVHlwZUVycm9yIiwibWF0Y2giLCJmaXJzdCIsInNoaWZ0IiwicmVwbGFjZSIsImkiLCJjb21wb25lbnQiLCJwdXNoIiwic3RyIiwiam9pbiIsInBhcnRzIiwic3BsaXQiLCJpbnB1dCIsImFyZ3VtZW50cyIsInNsaWNlIiwiY2FsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/url-join/lib/url-join.js\n");

/***/ })

};
;